{"version":3,"sources":["constants/formFields.constant.js","../../../node_modules/antd/es/notification/style/index.js","hocs/formItem.hoc.js","components/VerifyUserModal.js","components/SignInCard.js","screens/public/SignIn.screen.js"],"names":["FORM_ELEMENT_TYPES","INPUT","MULTIPLE_CHECKBOX","INPUT_NUMBER","PASSWORD","TEXTAREA","MARKDOWN","SELECT","CAPTCHA","MONTH_PICKER","FILE_DRAG_DROP","RANGE_PICKER","RADIO","SWITCH","HIDDEN","DATE","CASCADER","Option","CheckboxGroup","Group","formItem","key","rules","kwargs","type","others","customLabel","noLabel","formOptions","Item","label","charAt","toUpperCase","slice","name","Dragger","className","p1","p2","selectOptions","map","item","index","search","customTitle","toString","value","valueIndex","style","fontSize","fontWeight","dataKeys","flexWrap","i","index1","dataLabel","marginLeft","marginRight","radioOptions","onChange","checkOptions","Title","VerifyUserModal","username","password","signIn","close","open","useState","otp","setOTP","handleVerification","a","verifyUser","error","notification","message","description","onOk","onCancel","visible","okText","level","ExclamationCircleOutlined","color","prefix","placeholder","e","target","onPressEnter","SignInCard","verify","setVerify","loading","setLoading","dispatch","useDispatch","handelSignIn","getJWTTokens","tokens","data","access","refresh","window","storage","set","ACCESS_TOKEN","REFRESH_TOKEN","getUserMeta","handleSubmit","isUserVerified","verified","onFinish","layout","hideRequiredMark","required","htmlType","SignInScreen","to","icon","ApartmentOutlined"],"mappings":"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","file":"static/js/22.c8c13931.chunk.js","sourcesContent":["export const FORM_ELEMENT_TYPES = {\n  INPUT: 'input',\n  MULTIPLE_CHECKBOX:'MULTIPLE_CHECKBOX',\n  INPUT_NUMBER: 'input-number',\n  PASSWORD: 'password',\n  TEXTAREA: 'textarea',\n  MARKDOWN: 'markdown',\n  SELECT: 'select',\n  CAPTCHA: 'captcha',\n  MONTH_PICKER: 'month-picker',\n  FILE_DRAG_DROP: 'file-drag-drop',\n  RANGE_PICKER: 'range-picker',\n  RADIO: 'radio',\n  SWITCH: 'switch',\n  HIDDEN: 'hidden',\n  DATE: 'date',\n  CASCADER: 'cascader',\n};\n\nexport const SUBMIT_FORM = 'SUBMIT_FORM';\n\nexport const CAPTCHA = {\n  type: FORM_ELEMENT_TYPES.CAPTCHA,\n  name: 'captcha',\n  label: 'Captcha',\n  rules: [\n    {\n      required: process.env.NODE_ENV === 'production',\n      message: 'Please solve the captcha',\n    },\n  ],\n};\n","import '../../style/index.less';\nimport './index.less';","import React from 'react';\nimport { Form, Input, Upload, Select, Radio, DatePicker, Checkbox } from 'antd';\nimport { Icon } from '@ant-design/compatible';\nimport { FORM_ELEMENT_TYPES } from 'constants/formFields.constant';\n\nconst { Option } = Select;\nconst CheckboxGroup = Checkbox.Group;\n\nexport const formItem = (key, rules, kwargs, type, others, customLabel, noLabel) => {\n  let formOptions = {};\n  if (others) {\n    if (others.formOptions) {\n      formOptions = others.formOptions;\n    }\n  }\n  switch (type) {\n    case FORM_ELEMENT_TYPES.INPUT:\n      return (\n        <Form.Item\n          key={key}\n          label={noLabel ? null : customLabel || key.charAt(0).toUpperCase() + key.slice(1)}\n          name={key}\n          rules={rules}\n          {...formOptions}>\n          <Input {...kwargs} />\n        </Form.Item>\n      );\n\n    case FORM_ELEMENT_TYPES.FILE_DRAG_DROP:\n      return (\n        <Form.Item\n          key={key}\n          label={noLabel ? null : customLabel || key.charAt(0).toUpperCase() + key.slice(1)}\n          name={key}\n          rules={rules}\n          {...formOptions}>\n          <Upload.Dragger {...kwargs}>\n            <p className='ant-upload-drag-icon'>\n              <Icon type='inbox' />\n            </p>\n            <p className='ant-upload-text p-1'>{others.p1}</p>\n            <p className='ant-upload-hint p-1'>{others.p2}</p>\n          </Upload.Dragger>\n        </Form.Item>\n      );\n\n    case FORM_ELEMENT_TYPES.SELECT:\n      return (\n        <Form.Item\n          key={key}\n          label={noLabel ? null : customLabel || key.charAt(0).toUpperCase() + key.slice(1)}\n          name={key}\n          rules={rules}\n          {...formOptions}>\n          <Select {...kwargs}>\n            {others.selectOptions.map((item, index) => (\n              <Option\n                search={\n                  others.customTitle\n                    ? item[others.customTitle]\n                    : item.label || item[others.key] || item\n                }\n                key={index.toString()}\n                value={others.valueIndex ? index : item.value || item[others.key] || item}>\n                {others.customTitle ? (\n                  <text style={{ fontSize: 13, fontWeight: 'bold' }}>{item[others.customTitle]}</text>\n                ) : (\n                  item.label || item[others.key] || item\n                )}\n                {others.dataKeys ? (\n                  <div className='row' style={{ flexWrap: 'wrap' }}>\n                    {others.dataKeys.map((i, index1) => (\n                      <div className='row'>\n                        {others.dataLabel ? (\n                          <text\n                            style={{\n                              fontSize: 11,\n                              fontWeight: 'bold',\n                              marginLeft: 5,\n                              marginRight: 5,\n                            }}>\n                            {others.dataLabel[index1] ? others.dataLabel[index1] : null}\n                          </text>\n                        ) : null}\n                        <text style={{ fontSize: 11, marginLeft: 5, marginRight: 5 }}>{item[i]}</text>\n                      </div>\n                    ))}\n                  </div>\n                ) : null}\n              </Option>\n            ))}\n          </Select>\n        </Form.Item>\n      );\n\n    case FORM_ELEMENT_TYPES.RADIO:\n      return (\n        <Form.Item\n          key={key}\n          label={noLabel ? null : customLabel || key.charAt(0).toUpperCase() + key.slice(1)}\n          name={key}\n          rules={rules}\n          {...formOptions}>\n          <Radio.Group value='Ggg'>\n            {others.radioOptions.map((item) => (\n              <Radio key={item.value} value={item.value}>\n                {item.label}\n              </Radio>\n            ))}\n          </Radio.Group>\n        </Form.Item>\n      );\n\n    case FORM_ELEMENT_TYPES.DATE:\n      return (\n        <Form.Item\n          key={key}\n          {...formOptions}\n          label={noLabel ? null : customLabel || key.charAt(0).toUpperCase() + key.slice(1)}\n          name={key}\n          rules={rules}>\n          <DatePicker />\n        </Form.Item>\n      );\n    case FORM_ELEMENT_TYPES.MULTIPLE_CHECKBOX:\n      return (\n        <Form.Item\n          key={key}\n          label={noLabel ? null : customLabel || key.charAt(0).toUpperCase() + key.slice(1)}\n          name={key}\n          rules={rules}\n          {...formOptions}>\n          <CheckboxGroup onChange={others.onChange}>\n            {others.checkOptions.map((i) => (\n              <Checkbox value={i.value}>{i.label}</Checkbox>\n            ))}\n          </CheckboxGroup>\n        </Form.Item>\n      );\n    default:\n      return null;\n  }\n};\n","import React, { useState } from 'react';\nimport { Input, Modal, notification, Typography } from 'antd';\n\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { Icon } from '@ant-design/compatible';\nimport { verifyUser } from '@app/common/api/auth';\n\nconst { Title } = Typography;\n\nexport const VerifyUserModal = ({ username, password, signIn, close, open }) => {\n  const [otp, setOTP] = useState('');\n\n  const handleVerification = async () => {\n    const { error } = await verifyUser({ username, otp });\n    if (error)\n      notification.error({\n        message: `Cant verify user: ${username}`,\n        description: error.toString(),\n      });\n    else {\n      await signIn({ username, password });\n      close();\n    }\n  };\n\n  return (\n    <Modal onOk={handleVerification} onCancel={close} visible={open} okText='Verify my account'>\n      <Title level={4}>\n        <ExclamationCircleOutlined style={{ color: '#FFB108' }} />\n        {' '}\n        Your account is not verified yet\n      </Title>\n      <div>\n        Enter verification OTP you received in mail\n        <Input\n          value={otp}\n          prefix={<Icon type='lock' style={{ color: 'rgba(0,0,0,.25)' }} />}\n          placeholder='6 digit OTP'\n          onChange={(e) => setOTP(e.target.value)}\n          type='number'\n          onPressEnter={handleVerification}\n        />\n      </div>\n    </Modal>\n  );\n};\n","import React, { useState } from 'react';\nimport { Form, Button, notification } from 'antd';\nimport { useDispatch } from 'react-redux';\n\nimport { Icon } from '@ant-design/compatible';\nimport { ACCESS_TOKEN, REFRESH_TOKEN } from '@app/common/constants/storage';\nimport { getUserMeta } from '@app/common/helpers/auth';\n\nimport { formItem } from 'hocs/formItem.hoc';\nimport { FORM_ELEMENT_TYPES } from 'constants/formFields.constant';\n\nimport { VerifyUserModal } from 'components/VerifyUserModal';\n\nimport { getJWTTokens, isUserVerified } from '@app/common/api/auth';\n\nexport const SignInCard = () => {\n  const [verify, setVerify] = useState({ open: false, username: '', password: '' });\n  const [loading, setLoading] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const handelSignIn = async ({ username, password }) => {\n    try {\n      setLoading(true);\n      const { data: tokens } = await getJWTTokens({ username, password });\n\n      const { access, refresh } = tokens;\n      await window.storage.set(ACCESS_TOKEN, access);\n      await window.storage.set(REFRESH_TOKEN, refresh);\n\n      await getUserMeta(dispatch);\n    } catch (e) {\n      notification.error({ message: `Can't SignIn user: ${username}`, description: e.toString() });\n    }\n\n    setLoading(false);\n  };\n\n  // eslint-disable-next-line consistent-return\n  const handleSubmit = async ({ username, password }) => {\n    const { data: verified, error } = await isUserVerified({ username });\n\n    if (error)\n      notification.error({\n        message: `Error with user: ${username}`,\n        description: error.toString(),\n      });\n    else if (verified.verified) await handelSignIn({ username, password });\n    else setVerify({ open: true, username, password });\n  };\n\n  return (\n    <div className='sign-in-form'>\n      <div className='sign-heading-container'>\n        <h1>Login</h1>\n        <p>Sign in to your account</p>\n      </div>\n      <VerifyUserModal\n        {...verify}\n        signIn={handelSignIn}\n        close={() => setVerify({ open: false, username: '', password: '' })}\n      />\n      <Form onFinish={handleSubmit} layout='vertical' hideRequiredMark>\n        {formItem(\n          'username',\n          [{ required: true, message: 'Please input your username!' }],\n          {\n            prefix: <Icon type='user' style={{ color: 'rgba(0,0,0,.25)' }} />,\n            placeholder: 'Username',\n          },\n          FORM_ELEMENT_TYPES.INPUT,\n        )}\n        {formItem(\n          'password',\n          [{ required: true, message: 'Please input your password!' }],\n          {\n            prefix: <Icon type='lock' style={{ color: 'rgba(0,0,0,.25)' }} />,\n            placeholder: 'Password',\n            type: 'password',\n          },\n          FORM_ELEMENT_TYPES.INPUT,\n        )}\n        <Form.Item>\n          <Button type='primary' htmlType='submit' className='login-form-button' loading={loading}>\n            Sign in\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Button, Typography } from 'antd';\nimport { ApartmentOutlined } from '@ant-design/icons';\nimport { Link } from '@reach/router';\n\nimport { SignInCard } from 'components/SignInCard';\n\nconst { Title } = Typography;\n\nexport const SignInScreen = () => {\n  return (\n    <div className='App'>\n      <div className='main-sign-in'>\n        <div className='sign-in-left-container'>\n          <SignInCard />\n        </div>\n        <div className='sign-in-right-container'>\n          <Title level={3} style={{ color: '#fff' }}>\n            Sign Up\n          </Title>\n          <br />\n          <br />\n\n          <Link to='/sign-up/shipper/'>\n            <Button type='default' htmlType='submit' icon={<ApartmentOutlined />}>\n              Sign-Up as Shipper\n            </Button>\n          </Link>\n\n          <br />\n          <Link to='/sign-up/supplier/'>\n            <Button type='default' htmlType='submit' icon={<ApartmentOutlined />}>\n              Sign-Up as Supplier\n            </Button>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignInScreen;\n"],"sourceRoot":""}
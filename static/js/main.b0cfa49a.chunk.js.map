{"version":3,"sources":["../../common/api/auth.js","../../common/helpers/auth.js","../../common/assets/yantrakshLogo.png","../../common/constants/storage.js","helpers/shared.js","../../common/reducers/demo.js","../../common/reducers/auth.js","../../common/reducers/index.js","components/Loding.js","../../common/hooks/user.js","constants/routes.js","components/ScreenWrapper.js","screens/404.screen.js","components/PrivateRoutes.js","components/RootRouter.js","App.js","helpers/fontawesome.js","serviceWorker.js","index.js","../../common/actions/index.js","../../common/helpers/api.js","../../common/constants/enviroment.js","../../common/constants/userTypes.js","../../common/helpers/shared.js","../../common/actions/auth.js"],"names":["getJWTTokens","username","password","loadAPI","method","data","secure","isUserVerified","params","verifyUser","otp","getUserMeta","createShipperAccount","first_name","last_name","email","createSupplierAccount","type","url","$User$Supplier$FTL","$User$Supplier$PTL","Error","dispatch","a","storage","getStorage","get","ACCESS_TOKEN","getUserMetaAPI","meta","category","name","userAuthenticated","console","log","delete","REFRESH_TOKEN","module","exports","key","d","reactLocalStorage","getObject","set","value","setObject","remove","window","initialState","clicked","isAuthenticated","reducers","combineReducers","demo","state","action","$","newState","HELLO_BUTTON_CLICKED","auth","USER_AUTH_SUCCESS","userType","LOGOUT","store","createStore","applyMiddleware","thunk","Loading","className","LoadingOutlined","style","fontSize","useUser","useSelector","publicRoutes","Component","lazy","path","extraRoutesShipper","extraRoutesSupplierFTL","shipperRoutes","icon","isSubMenu","subMenu","supplierFTLRoutes","supplierPTLRoutes","SubMenu","Header","Content","Sider","Footer","Text","ScreenWrapper","routes","navigate","children","useState","isCollapsed","setIsCollapsed","collapsedWidth","setCollapsedWidth","useDispatch","user","menu","Item","to","Divider","onClick","logout","backgroundColor","paddingLeft","paddingRight","width","height","marginRight","alt","src","logo","overlay","trigger","size","UserOutlined","margin","padding","collapsible","onCollapse","theme","mode","inlineCollapsed","defaultSelectedKeys","defaultOpenKeys","borderRight","map","i","title","subItem","fallback","minHeight","target","rel","href","NotFound404Screen","PrivateRoutes","extraRoutes","Route","index","toString","ChildRoute","ind","default","RootRouter","loading","setLoading","useEffect","location","init","then","display","alignItems","justifyContent","$User$SHIPPER","App","library","add","fab","fas","far","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","axios","defaults","baseURL","getAccessToken","accessToken","refreshToken","accessPayload","jwtDecode","Date","parseInt","exp","post","refresh","newAccessToken","access","opts","onSuccess","onFailure","defaultData","headers","options","Authorization","res","status","undefined","response","request","e","message","global"],"mappings":"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","file":"static/js/main.b0cfa49a.chunk.js","sourcesContent":["import { $User$Supplier$FTL, $User$Supplier$PTL } from '../constants/userTypes';\nimport { loadAPI } from '../helpers/api';\n\nexport const getJWTTokens = ({ username, password }) => loadAPI(`/api/token/`, {\n  method: 'POST',\n  data: { username, password },\n  secure: false,\n});\n\nexport const isUserVerified = ({ username }) => loadAPI(`/verification/`, {\n  params: { username },\n  secure: false,\n});\n\nexport const verifyUser = ({ username, otp }) => loadAPI('/verifyOTP/', {\n  method: 'POST',\n  data: { username, otp },\n  secure: false,\n});\n\nexport const getUserMeta = () => loadAPI(`/user/meta/`);\n\nexport const createShipperAccount =\n  // eslint-disable-next-line camelcase\n  ({ first_name, last_name, username, email, password }) =>\n    loadAPI(`/create-shipper/`, {\n      method: 'POST',\n      data: { first_name, last_name, username, email, password },\n      secure: false,\n    });\n\n\nexport const createSupplierAccount =\n  // eslint-disable-next-line camelcase\n  ({ first_name, last_name, username, email, password, type }) => {\n    let url = '';\n\n    if (type === $User$Supplier$FTL)\n      url = '/create-ftl/';\n    else if (type === $User$Supplier$PTL)\n      url = '/create-ptl/';\n    else\n      throw Error('Unknown supplier type');\n\n    return loadAPI(url, {\n      method: 'POST',\n      data: { first_name, last_name, username, email, password },\n      secure: false,\n    });\n  };\n","import { userAuthenticated } from '../actions/auth';\nimport { ACCESS_TOKEN, REFRESH_TOKEN } from '../constants/storage';\n\nimport { getStorage } from './shared';\n\nimport { getUserMeta as getUserMetaAPI } from '../api/auth';\n\nexport const getUserMeta = async (dispatch) => {\n  const storage = getStorage();\n  if (!(await storage.get(ACCESS_TOKEN, null))) return false;\n  const { data: meta } = await getUserMetaAPI();\n\n  try {\n    // const { data: meta } = await getUserMetaAPI();\n    // console.log(meta,'yela')\n    if (meta) {\n      const { category: type, name, email, username } = meta;\n      dispatch(userAuthenticated({ name, type, email, username }));\n      console.log(meta, 'meta');\n      return false;\n    }\n\n    await storage.delete(ACCESS_TOKEN);\n    await storage.delete(REFRESH_TOKEN);\n  } catch (e) {\n    // ignore error\n  }\n\n  return true;\n};\n","module.exports = __webpack_public_path__ + \"static/media/yantrakshLogo.87d0dc2b.png\";","export const ACCESS_TOKEN = 'ACCESS_TOKEN';\nexport const REFRESH_TOKEN = 'REFRESH_TOKEN';\n","import { reactLocalStorage } from 'reactjs-localstorage';\n\nconst storage = {\n  get: async (key, d) => reactLocalStorage.getObject(key, d),\n  set: async (key, value) => reactLocalStorage.setObject(key, value),\n  delete: async (key) => reactLocalStorage.remove(key),\n};\n\nwindow.storage = storage;\n","import { HELLO_BUTTON_CLICKED } from '../actions';\n\nconst initialState = {\n  clicked: 0,\n};\n\nexport const demo = (state = initialState, action) => {\n  const $ = (newState) => ({ ...state, ...newState });\n\n  switch (action.type) {\n    case HELLO_BUTTON_CLICKED:\n      return $({ clicked: state.clicked + 1 });\n    default:\n      return $();\n  }\n};\n","import { LOGOUT, USER_AUTH_SUCCESS } from '../actions';\n\nconst initialState = {\n  isAuthenticated: false,\n  email: null,\n  name: null,\n  type: null,\n  username: '',\n};\n\nexport const auth = (state = initialState, action) => {\n  const $ = (newState) => ({ ...state, ...newState });\n  console.log(action);\n\n  switch (action.type) {\n    case USER_AUTH_SUCCESS:\n      return $({\n        name: action.name,\n        isAuthenticated: true,\n        type: action.userType,\n        username: action.username,\n      });\n    case LOGOUT:\n      return $(initialState);\n    default:\n      return $();\n  }\n};\n","import { combineReducers, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { demo } from './demo';\nimport { auth } from './auth';\n\nconst reducers = combineReducers({\n  demo,\n  auth,\n});\n\nexport const store = createStore(reducers, applyMiddleware(thunk));\n","import React from 'react';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nexport const Loading = () => {\n  return (\n    <div className='column h-100 w-100 align-center justify-center'>\n      <div className='m-2'>\n        <LoadingOutlined style={{ fontSize: 30 }} />\n      </div>\n      <p>Loading...</p>\n    </div>\n  );\n};\n","import { useSelector } from 'react-redux';\n\nexport const useProtected = (allowed = []) => {\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n  const userType = useSelector((state) => state.auth.type);\n  return isAuthenticated && allowed && allowed.indexOf(userType) > -1;\n};\n\nexport const useUser = () => {\n  return useSelector((state) => state.auth);\n};\n","import { lazy } from 'react';\n\nexport const publicRoutes = [\n  { Component: lazy(() => import('screens/public/SignIn.screen')), path: '/' },\n  {\n    Component: lazy(() => import('screens/public/Shipper.SignUp.screen')),\n    path: '/sign-up/shipper/',\n  },\n  {\n    Component: lazy(() => import('screens/public/Supplier.SignUp.screen')),\n    path: '/sign-up/supplier/',\n  },\n];\n\nexport const extraRoutesShipper = [\n  {\n    path: '/edit-profile/',\n    Component: lazy(() => import('screens/shipper/EditProfile')),\n  },{\n    path: '/',\n    Component: lazy(() => import('screens/shipper/Dashboard.shipper.screen')),\n  },\n  {\n    path:'/freight-exchange/view-bid/:id',\n    Component: lazy(()=>import('screens/shipper/ViewBids.shipper.screen'))\n  },\n\n]\nexport const extraRoutesSupplierFTL = [\n  {\n    path: '/edit-profile/',\n    Component: lazy(() => import('screens/supplier/FTL/EditProfile')),\n  },{\n    path: '/',\n    Component: lazy(() => import('screens/supplier/FTL/Dashboard.ftl.supplier.screen')),\n  },\n\n]\nexport const extraRoutesSupplierPTL = [\n  {\n    path:'/',\n    Component: lazy(()=>import('screens/supplier/PTL/Dashboard.ptl.supplier.screen'))\n  },\n]\nexport const shipperRoutes = [\n  {\n    name: 'Dashboard',\n    icon:['fas', 'home'],\n    path: '/dashboard/',\n    Component: lazy(() => import('screens/shipper/Dashboard.shipper.screen')),\n  },\n  {\n    name: 'Masters',\n    icon:['fas', 'layer-group'],\n    path: '/masters/',\n    isSubMenu: true,\n    subMenu: [\n      {\n        name: 'Item',\n        path: '/master/item/',\n        Component: lazy(() => import('screens/shipper/Items.shipper.screen')),\n      },\n      {\n        name: 'Vendor',\n        path: '/master/vendor/',\n        Component: lazy(() => import('screens/shipper/Vendor.shipper.screen')),\n      },\n      {\n        name: 'Address',\n        path: '/master/address/',\n        Component: lazy(() => import('screens/shipper/Address.shipper.screen')),\n      },\n    ],\n  },\n  {\n    name: 'Sales Order',\n    icon: ['fas', 'layer-group'],\n    path: '/sales-orders/',\n    Component: lazy(() => import('screens/shipper/SalesOrder.shipper.screen')),\n  },\n  {\n    name: 'Freight Exchange',\n    icon:['fas', 'layer-group'],\n    path: '/freight-exchange/',\n    Component: lazy(() => import('screens/shipper/FreightExchange.shipper.screen')),\n  },{\n    name: 'Carrier Selection',\n    icon:['fas', 'layer-group'],\n    path: '/carrier-selection/',\n    Component: lazy(() => import('screens/shipper/CarrierSelection.shipper')),\n  },{\n    name: 'Live Trucks',\n    icon:['fas', 'layer-group'],\n    path: '/live-trucks/',\n    Component: lazy(() => import('screens/shipper/liveTrucks.shipper.screen')),\n  },\n  {\n    name: 'Shipping',\n    icon: ['fas', 'compass'],\n    path: '/shipping/',\n    Component: lazy(() => import('screens/shipper/Shipping.shipper.screen')),\n  },\n  {\n    name: 'Transport Directory',\n    icon: ['fas', 'layer-group'],\n    path: '/transport-directory/',\n    Component: lazy(() => import('screens/shipper/TransportDirectory.shipper.screen')),\n  },\n];\n\nexport const supplierFTLRoutes = [\n  {\n    name: 'Available loads',\n    icon: ['fas', 'layout'],\n    path: '/available-loads/',\n    Component: lazy(() => import('screens/supplier/FTL/AvailableLoads.ftl.supplier.screen')),\n  },\n  {\n    name: 'Post Truck',\n    icon:['fas', 'layout'],\n    path: '/post-truck/',\n    Component: lazy(() => import('screens/supplier/FTL/PostTruck.ftl.supplier.screen')),\n  },\n  {\n    name: 'My Bids',\n    icon: ['fas', 'layout'],\n    path: '/my-bids/',\n    Component: lazy(() => import('screens/supplier/FTL/MyBids.ftl.supplier.screen')),\n  },\n  {\n    name: 'Trips Management',\n    icon:['fas', 'layout'],\n    path: '/trips-management/',\n    Component: lazy(() => import('screens/supplier/FTL/TripManagement.ftl.supplier.screen')),\n  },\n];\n\nexport const supplierPTLRoutes = [\n  {\n    name: 'View Pickup requests',\n    icon: ['fas', 'layout'],\n    path: '/view-pickup-requests/',\n    Component: lazy(() => import('screens/supplier/PTL/ViewPickupRequest.supplier.screen')),\n  },\n];\n","import React, { useState, Suspense } from 'react';\nimport { Layout, Menu, Divider, Dropdown, Avatar, Typography } from 'antd';\nimport { Link } from '@reach/router';\nimport { useDispatch } from 'react-redux';\nimport { UserOutlined } from '@ant-design/icons';\nimport logo from '@app/common/assets/yantrakshLogo.png';\nimport { useUser } from '@app/common/hooks/user';\n\nimport { Loading } from 'components/Loding';\nimport { logout } from '@app/common/actions/auth';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Sider, Footer } = Layout;\nconst { Text } = Typography;\nexport const ScreenWrapper = ({ routes, navigate, children }) => {\n  const [isCollapsed, setIsCollapsed] = useState(false);\n  const [collapsedWidth, setCollapsedWidth] = useState(80);\n  const dispatch = useDispatch();\n\n  const user = useUser();\n\n  const menu = (\n    <Menu>\n      <Menu.Item key='0'>\n        <Link to='/edit-profile/'>Edit Profile</Link>\n      </Menu.Item>\n      <Menu.Divider />\n      <Menu.Item key='1'>\n        <Text\n          onClick={() => {\n            dispatch(logout());\n            navigate('');\n          }}\n          type='danger'>\n          Log Out\n        </Text>\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <Layout className=''>\n      <Header\n        className='header row align-center justify-between'\n        style={{ backgroundColor: '#fff', paddingLeft: 20, paddingRight: 20 }}>\n        <div className='bg-white m-0 row align-center'>\n          <img style={{ width: 120, height: 30, marginRight: 10 }} alt='Yantraksh' src={logo} />\n        </div>\n\n        {/* eslint-disable-next-line max-len */}\n        {/* eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions */}\n        <Dropdown overlay={menu} trigger={['click']}>\n          <div className='row align-center'>\n            <p className='m-2'>\n              {user.name}\n              {' '}\n              (\n              {user.username}\n              )\n            </p>\n            <Avatar size='large' icon={<UserOutlined />} />\n          </div>\n        </Dropdown>\n      </Header>\n      <Divider style={{ margin: 0, padding: 0 }} />\n      <Layout>\n        <Sider\n          // trigger={null}\n          collapsible\n          width={200}\n          collapsedWidth={collapsedWidth}\n          onCollapse={() => {\n            setCollapsedWidth(80);\n            setIsCollapsed(!isCollapsed);\n          }}\n          className='site-layout-background'>\n          <Menu\n            theme='dark'\n            mode='inline'\n            inlineCollapsed\n            defaultSelectedKeys={[routes[0].name]}\n            defaultOpenKeys={[routes[0].name]}\n            style={{ height: '100%', borderRight: 0 }}>\n            {routes.map((i) => {\n              if (i.subMenu) {\n                return (\n                  <SubMenu\n                    key={i.name}\n                    icon={\n                      <FontAwesomeIcon icon={i.icon} style={{ marginRight: isCollapsed ? 50 : 5 }} />\n                    }\n                    title={i.name}>\n                    {i.subMenu.map((subItem) => (\n                      <Menu.Item key={subItem.name}>\n                        <Link to={subItem.path} key={subItem.name}>\n                          {subItem.name}\n                        </Link>\n                      </Menu.Item>\n                    ))}\n                  </SubMenu>\n                );\n              }\n              return (\n                <Menu.Item\n                  key={i.name}\n                  icon={\n                    <FontAwesomeIcon icon={i.icon} style={{ marginRight: isCollapsed ? 50 : 5 }} />\n                  }>\n                  <Link to={i.path} key={i.name}>\n                    {i.name}\n                  </Link>\n                </Menu.Item>\n              );\n            })}\n          </Menu>\n        </Sider>\n        <Layout style={{ padding: '24px' }}>\n          <Suspense fallback={<Loading />}>\n            <Content\n              className='site-layout-background content-style'\n              style={{ minHeight: `calc( 100vh - 184px )` }}>\n              {children}\n            </Content>\n          </Suspense>\n          <Footer className='row justify-end '>\n            <span>\n              <a target='_blank' rel='noopener noreferrer' href='https://yantraksh.com'>\n                Yantraksh Logistics Pvt. Ltd\n              </a>\n              {' '}\n              &copy; All rights reserved\n            </span>\n          </Footer>\n        </Layout>\n      </Layout>\n      <Divider style={{ margin: 0, padding: 0 }} />\n    </Layout>\n  );\n};\n","import React from 'react';\n\nexport const NotFound404Screen = () => (\n  <h1>\n    4o4: Not Found\n  </h1>\n);\n","import React from 'react';\nimport { Router } from '@reach/router';\n\nimport { ScreenWrapper } from 'components/ScreenWrapper';\nimport { NotFound404Screen } from 'screens/404.screen';\n\nexport const PrivateRoutes = ({ routes,extraRoutes }) => {\n  return (\n    <Router>\n      <ScreenWrapper path='/' routes={routes}>\n        <>\n          {routes.map((Route, index) => {\n            return <Route.Component path={Route.path} key={index.toString()} />;\n          })}\n          {routes.map((Route) => {\n            return Route.subMenu\n              ? Route.subMenu.map((ChildRoute, ind) => (\n                <ChildRoute.Component path={ChildRoute.path} key={ind.toString()} />\n              ))\n              : null;\n          })}\n          {extraRoutes?extraRoutes.map((Route, index) => {\n            return <Route.Component path={Route.path} key={index.toString()} />;\n          }):null}\n          <NotFound404Screen default />\n        </>\n      </ScreenWrapper>\n    </Router>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Spin } from 'antd';\nimport { useDispatch } from 'react-redux';\nimport { Router } from '@reach/router';\n\nimport { useUser } from '@app/common/hooks/user';\nimport { getUserMeta } from '@app/common/helpers/auth';\nimport { $User$SHIPPER, $User$Supplier$FTL,\n  $User$Supplier$PTL } from '@app/common/constants/userTypes';\n\nimport {\n  extraRoutesShipper,\n  extraRoutesSupplierFTL,\n  publicRoutes,\n  shipperRoutes,\n  supplierFTLRoutes,\n  supplierPTLRoutes,\n} from 'constants/routes';\n\nimport { PrivateRoutes } from 'components/PrivateRoutes';\nimport { NotFound404Screen } from 'screens/404.screen';\n\n/**\n * @return {*[]}\n */\nexport const RootRouter = () => {\n  const [loading, setLoading] = useState(true);\n\n  const user = useUser();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const init = async () => {\n      const toHome = await getUserMeta(dispatch);\n      if (toHome) window.location = '/';\n    };\n\n    init().then(() => setLoading(false));\n  }, [dispatch]);\n\n  if (loading)\n    return (\n      <div\n        style={{\n          width: '100vw',\n          height: '100vh',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}>\n        <Spin />\n      </div>\n    );\n\n  switch (user.type) {\n    case null:\n      return (\n        <Router>\n          {publicRoutes.map((Route, index) => {\n            return <Route.Component path={Route.path} key={index.toString()} />;\n          })}\n          <NotFound404Screen default />\n        </Router>\n      );\n\n    case $User$SHIPPER:\n      return <PrivateRoutes routes={shipperRoutes} extraRoutes={extraRoutesShipper} />;\n\n    case $User$Supplier$FTL:\n      return <PrivateRoutes routes={supplierFTLRoutes} extraRoutes={extraRoutesSupplierFTL} />;\n    case $User$Supplier$PTL:\n      return <PrivateRoutes routes={supplierPTLRoutes} />;\n\n    default:\n      return null;\n  }\n};\n","import './App.css';\n\nimport React, { Suspense } from 'react';\nimport { Provider } from 'react-redux';\n\nimport 'helpers/shared';\n\nimport { store } from '@app/common/reducers';\nimport { Loading } from 'components/Loding';\nimport { RootRouter } from 'components/RootRouter';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Suspense fallback={<Loading />}>\n        <RootRouter />\n      </Suspense>\n    </Provider>\n  );\n}\n\nexport default App;\n","// import the library\nimport { library } from '@fortawesome/fontawesome-svg-core';\n\n// import your icons\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { far } from '@fortawesome/free-regular-svg-icons';\n\nlibrary.add(\n  fab,fas,far\n);\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {'Service-Worker': 'script'},\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport App from './App';\nimport 'helpers/fontawesome';\n\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const HELLO_BUTTON_CLICKED = 'HELLO_BUTTON_CLICKED';\n\nexport const USER_AUTH_SUCCESS = 'USER_AUTH_SUCCESS';\nexport const LOGOUT = 'LOGOUT';\n","import jwtDecode from 'jwt-decode';\nimport axios from 'axios';\n\nimport { ACCESS_TOKEN, REFRESH_TOKEN } from '../constants/storage';\nimport { DEFAULT_BASE_URL } from '../constants/enviroment';\n\nimport { getStorage } from './shared';\n\naxios.defaults.baseURL = DEFAULT_BASE_URL;\n\nconst getAccessToken = async () => {\n  const storage = getStorage();\n\n  const accessToken = await storage.get(ACCESS_TOKEN, null);\n  const refreshToken = await storage.get(REFRESH_TOKEN, null);\n  if (!(accessToken && refreshToken)) throw Error('No user found');\n\n  const accessPayload = jwtDecode(accessToken);\n  if (new Date(parseInt(accessPayload.exp, 10) * 1000) > new Date()) return accessToken;\n\n  const {\n    data: { access: newAccessToken },\n  } = await axios.post('/api/token/refresh/', {\n    refresh: refreshToken,\n  });\n\n  await storage.set(ACCESS_TOKEN, newAccessToken);\n\n  return newAccessToken;\n};\n\nexport const loadAPI = async (url, opts = {}) => {\n  const {\n    onSuccess = (data) => data,\n    onFailure = (error) => error,\n    secure = true,\n    defaultData,\n    headers,\n    ...options\n  } = opts;\n\n  try {\n    const res = await axios(url, {\n      headers: {\n        ...(secure ? { Authorization: `Bearer ${await getAccessToken()}` } : {}),\n        ...headers,\n      },\n      ...options,\n    });\n\n    const { data, status } = res;\n    await onSuccess(data);\n    return { data, status, error: undefined, loading: false };\n  } catch (error) {\n    if (error.response) {\n      const { data, status } = error.response;\n      await onFailure(data);\n      return { data: undefined, status, error: data, loading: false };\n    }\n\n    if (error.request) {\n      const e = { message: 'error in request setup' };\n      // noinspection JSCheckFunctionSignatures\n      return { data: undefined, status: 0, error: e, loading: false };\n    }\n\n    throw Error(error);\n  }\n};\n","export const DEFAULT_BASE_URL = 'https://cargobackend.yantraksh.com';\n","export const $User$SHIPPER = 'shipper';\nexport const $User$Supplier$FTL = 'ftl supplier';\nexport const $User$Supplier$PTL = 'ptl supplier';\n","export const getStorage = () => (window ? window.storage : global.storage);\n","import { getStorage } from '../helpers/shared';\nimport { ACCESS_TOKEN, REFRESH_TOKEN } from '../constants/storage';\n\nimport { LOGOUT, USER_AUTH_SUCCESS } from './index';\n\n\nexport const userAuthenticated = ({ name, type, email, username }) => ({\n  type: USER_AUTH_SUCCESS,\n  userType: type,\n  name,\n  email,\n  username,\n});\n\nexport const logout = () => async (dispatch) => {\n  const storage = getStorage();\n\n  await storage.delete(ACCESS_TOKEN);\n  await storage.delete(REFRESH_TOKEN);\n\n  dispatch({ type: LOGOUT })\n};\n"],"sourceRoot":""}
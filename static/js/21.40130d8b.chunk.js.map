{"version":3,"sources":["../../common/hooks/api.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","hocs/Master.hoc.js","../../common/helpers/dateFomatter.js","../../common/columns/supplierMyBids.column.js","screens/supplier/FTL/MyBids.ftl.supplier.screen.js"],"names":["defaultAPIResponse","loading","data","undefined","error","status","useAPI","url","opts","defaultData","options","useState","response","setResponse","refresh","setRefresh","reload","ox","JSON","stringify","useEffect","a","loadAPI","load","then","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","Title","MasterHOC","title","columns","modalParams","ModalBody","modalBody","modalStyle","hideRightButton","tableOptions","customModalTitle","customRightButtonLabel","modalVisible","setModalVisible","onCancel","setModalParams","showModal","visible","style","minWidth","footer","id","onDone","justify","level","className","type","onClick","margin","padding","span","bordered","dataSource","dateFormatter","str","date","Date","getDay","getMonth","getFullYear","supplierMyBidsColumn","dataIndex","key","Text","MyBidsFTLSupplierScreen","filteredData","setFilteredData","bid_amount","bid_date","bids","setBids","getViewBidData","array","filter","i","order","filtered","forEach","some","item","push","filterTableData","render","row","order_id","sender_address","city","state","receiver_address","orientation","slice","length","map","bid","index","toString","delete"],"mappings":"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","file":"static/js/21.40130d8b.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\n\nimport { loadAPI } from '../helpers/api';\n\nconst defaultAPIResponse = {\n  loading: true,\n  data: undefined,\n  error: null,\n  status: 0,\n};\n\nexport const useAPI = (url, opts={}) => {\n  const { defaultData, ...options } = opts;\n  const [response, setResponse] = useState(defaultAPIResponse);\n  const [refresh, setRefresh] = useState(0);\n  const reload = () => setRefresh(refresh + 1);\n  \n  const ox = JSON.stringify(options);\n\n  useEffect(() => {\n    setResponse(defaultAPIResponse);\n    const load = async () => {\n      setResponse({ data: undefined, status: 200, error: undefined, loading: true });\n      if (defaultData)\n        setResponse({ data: defaultData, status: 200, error: undefined, loading: false });\n      // noinspection JSCheckFunctionSignatures\n      setResponse(await loadAPI(url, options));\n    };\n\n    load().then();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [url, ox, refresh]);\n\n  return { ...response, reload };\n};\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useEffect, useState } from 'react';\nimport { Typography, Button, Divider, Row, Col, Table, Modal } from 'antd';\n\nconst { Title } = Typography;\n\nexport const MasterHOC = ({\n  title,\n  data,\n  columns,\n  modalParams,\n  modalBody: ModalBody,\n  modalStyle,\n  hideRightButton,\n  tableOptions,\n  customModalTitle,\n  refresh = () => {},\n  customRightButtonLabel,\n  loading = false,\n}) => {\n  const [modalVisible, setModalVisible] = useState(false);\n\n  const onCancel = () => {\n    setModalVisible(false);\n    if (modalParams) modalParams.setModalParams(undefined);\n  };\n\n  const onDone = () => {\n    refresh();\n    onCancel();\n  };\n\n  useEffect(() => {\n    if (modalParams) setModalVisible(modalParams.showModal);\n  }, [modalParams]);\n\n  return (\n    <div>\n      {hideRightButton ? null : (\n        <Modal\n          visible={modalVisible}\n          onCancel={onCancel}\n          style={modalStyle||{ minWidth: '80vw' }}\n          title={customModalTitle || customRightButtonLabel || `Add ${title}`}\n          footer={null}>\n          <ModalBody\n            id={modalParams ? modalParams.id : undefined}\n            onCancel={onCancel}\n            onDone={onDone}\n          />\n        </Modal>\n      )}\n      <Row justify='space-between'>\n        <Col>\n          <Title level={3}>{title}</Title>\n        </Col>\n        <Col>\n          {hideRightButton ? null : (\n            <Button\n              className='m-2'\n              type='primary'\n              onClick={() => {\n                setModalVisible(true);\n              }}>\n              {customRightButtonLabel || `Add ${title}`}\n            </Button>\n          )}\n        </Col>\n      </Row>\n      <Divider style={{ margin: 0, padding: 0 }} />\n      <Row>\n        <Col span={24}>\n          <Table bordered dataSource={data} columns={columns} loading={loading} {...tableOptions} />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n","export const dateFormatter=(str) =>{\n  const date = new Date(str);\n  return `${date.getDay()}-${date.getMonth()}-${date.getFullYear()}`;\n}\nexport const nativeDateFormatter=(str)=>{\n  const date = new Date(str);\n  return date.toDateString()\n}\n","export const supplierMyBidsColumn = [\n  {\n    title: 'Bid Amount',\n    dataIndex: 'bid_amount',\n    key: 'bid_amount',\n  },\n  {\n    title: 'Comment',\n    dataIndex: 'comments',\n    key: 'comment',\n  },\n];\n","import React, { useState,useEffect } from 'react';\nimport { Button, Row, Col, Typography, Modal, Divider } from 'antd';\n\nimport { MasterHOC } from 'hocs/Master.hoc';\nimport { supplierMyBidsColumn } from '@app/common/columns/supplierMyBids.column';\nimport { useAPI } from '@app/common/hooks/api';\nimport { dateFormatter } from '@app/common/helpers/dateFomatter';\n\nconst { Text } = Typography;\n\nexport const MyBidsFTLSupplierScreen = () => {\n  const [modalVisible, setModalVisible] = useState(false);\n  const [filteredData, setFilteredData] = useState([]);\n  const [bids, setBids] = useState([{ bid_amount:0,bid_date:'' }]);\n  const { data, loading, reload } = useAPI(`/mybids/`);\n\n  const filterTableData=(array)=>{\n    const filtered = []\n    array.forEach((i)=>{\n      if(filtered.some(item => {return i.order.id === item.order.id })){\n        return null\n      }\n      filtered.push(i)\n      return null\n    })\n    return filtered\n  }\n\n  const getViewBidData = (array,id) => {\n    return array.filter(i=>(i.order.id===id))\n  }\n\n  useEffect(()=>{\n    if(data) {\n      if(data[0]){\n        setBids(getViewBidData(data,data[0].order.id))\n        setFilteredData(filterTableData(data))\n      }\n    }},[data,loading])\n\n\n  const columns = [\n    {\n      title: 'Order ID',\n      dataIndex: 'order',\n      key: 'order_id',\n      render:(row)=>(<div>{row.order_id}</div>)\n    },\n    {\n      title: 'Sender Address',\n      dataIndex: 'order',\n      key: 'sender_address',\n      render:(row)=>(\n        <div>\n          {row.sender_address.city}\n          ,\n          {row.sender_address.state}\n        </div>\n      )\n    }, {\n      title: 'Receiver Address',\n      dataIndex: 'order',\n      key: 'receiver_address',\n      render:(row)=>(\n        <div>\n          {row.receiver_address.city}\n          ,\n          {row.receiver_address.state}\n        </div>\n      )\n    },\n    {\n      title: 'Is Confirmed?',\n      dataIndex: 'is_confirmed',\n      key: 'is_confirmed',\n      render:(row)=>(\n        <div>\n          {row?'Yes':'No'}\n        </div>\n      )\n    },\n    ...supplierMyBidsColumn,\n    {\n      title: 'Action',\n      key: 'operation',\n      render: (row) => (\n        <Row justify='center'>\n          <Col>\n            <Button\n              type='primary'\n              onClick={\n              () => {\n                setBids(getViewBidData(data,row.order.id))\n                setModalVisible(true);}\n            }>\n              View\n            </Button>\n          </Col>\n        </Row>\n      ),\n    },\n  ];\n\n  return (\n    <div>\n      <MasterHOC\n        title='My Bids'\n        columns={columns}\n        loading={loading}\n        refresh={reload}\n        data={filteredData}\n        hideRightButton />\n      <Modal\n        visible={modalVisible}\n        onCancel={()=>{setModalVisible(false)}}\n        footer={null}\n        title='Bid Now'\n        >\n        <Row>\n          <Col span={24}>\n            <Divider orientation='left'>Recent Bid</Divider>\n            <Row justify='space-between'>\n              <Col>\n                <Text>{dateFormatter(bids[0].bid_date)}</Text>\n              </Col>\n              <Col>\n                <Text>{bids[0].bid_amount}</Text>\n              </Col>\n            </Row>\n            <Divider orientation='left'>Previous Bids</Divider>\n            {bids.slice(1, bids.length).map((bid, index) => (\n              <Row justify='space-between' key={index.toString()}>\n                <Col>\n                  <Text>{dateFormatter(bid.bid_date)}</Text>\n                </Col>\n                <Col>\n                  <Text delete>{bid.bid_amount}</Text>\n                </Col>\n              </Row>\n            ))}\n          </Col>\n        </Row>\n      </Modal>\n    </div>\n  );\n};\n\nexport default MyBidsFTLSupplierScreen;\n"],"sourceRoot":""}